// Top level header file for interrupt related operations.
#ifndef _INTERRUPT_H
#define _INTERRUPT_H
#include <includes/types.h>

// Here are the type of IDT gate descriptor.
// Task: Upon receiving an interrupt, a task handle it.
// Int:  This is a regular interrupt handler where the CPU jumps to it upon
// receiving its corresponding interrupt.
// Trap: This is the same as `Int` but the interrupts are not disabled during
// the call to the handler.
// In this kernel we will mostly use the `Int` type.
#define IDT_GATE_DESC_TYPE_TASK (5)
#define IDT_GATE_DESC_TYPE_INT  (14)
#define IDT_GATE_DESC_TYPE_TRAP (15)

// The IDT gate descriptor.
struct idt_gate_desc_t {
    // The offset to the handler.
    uint16_t offset_bits15_to_0 : 16;
    uint16_t segment_selector : 16; 
    // Those bits should not be touched.
    uint8_t reserved : 5;
    // Those bits *must* be 0. This is enforced by every function that
    // manipulates interrupt_gate_desc_t. Only used for interrupt and trap gate
    // descriptors.
    uint8_t zeros : 3;
    // This is the bits indicating wether this entry is a task gate, an
    // interrupt gate or a trap gate.
    uint8_t type : 5;
    // The level of privileges required to operate the gate.
    uint8_t privileges : 2;
    // Is this entry present in the IDT ?
    uint8_t present : 1;
    // The remaining of the offset.
    uint16_t offset_bits31to16 : 16;
};

void generic_handler(uint32_t irq);
void interrupt_handler_0(void);
void interrupt_handler_1(void);
void interrupt_handler_2(void);
void interrupt_handler_3(void);
void interrupt_handler_4(void);
void interrupt_handler_5(void);
void interrupt_handler_6(void);
void interrupt_handler_7(void);
void interrupt_handler_8(void);
void interrupt_handler_9(void);
void interrupt_handler_10(void);
void interrupt_handler_11(void);
void interrupt_handler_12(void);
void interrupt_handler_13(void);
void interrupt_handler_14(void);
void interrupt_handler_15(void);
void interrupt_handler_16(void);
void interrupt_handler_17(void);
void interrupt_handler_18(void);
void interrupt_handler_19(void);
void interrupt_handler_20(void);


// Initialize Interrupt Descriptor Table.
void
idt_init(void);
#endif
